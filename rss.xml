<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sakura Notes</title><link>/</link><description>Recent content on Sakura Notes</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Thu, 08 Aug 2024 13:04:20 +0800</lastBuildDate><atom:link href="/rss.xml" rel="self" type="application/rss+xml"/><item><title>queue队列</title><link>/post/queue-queue-z1b93g7.html</link><pubDate>Thu, 08 Aug 2024 00:00:00 +0800</pubDate><guid>/post/queue-queue-z1b93g7.html</guid><description>queue队列 queue队列 底层实现 支持empty，size，front，back，push_back，pop_front 的容器 底层容器：d</description></item><item><title>元组</title><link>/post/turtle-1geggg.html</link><pubDate>Thu, 18 Jul 2024 17:12:05 +0800</pubDate><guid>/post/turtle-1geggg.html</guid><description>元组 STL通常没有实现对应的哈希函数，因此在使用unordered_map/unordered_set时不能直接使用 pair对值 #include &amp;lt;utility&amp;gt; std::pair&amp;lt;int, char&amp;gt; mypair(std::make_pair(20, &amp;#39;b&amp;#39;));</description></item><item><title>哈希表</title><link>/post/hash-table-z26kjag.html</link><pubDate>Thu, 18 Jul 2024 16:33:36 +0800</pubDate><guid>/post/hash-table-z26kjag.html</guid><description>哈希表 装填因子 定义：元素个数/表长 最大装填因子一般取 0.5 &amp;lt;= α&amp;lt;= 0.85 平均查找长度 查找成功时的平均查找长度 = 表中每个元素查找成功时的比较次数</description></item><item><title>map字典</title><link>/post/map-dictionary-z1xnnbh.html</link><pubDate>Thu, 18 Jul 2024 16:23:58 +0800</pubDate><guid>/post/map-dictionary-z1xnnbh.html</guid><description>map字典 成员函数 函数 功能 empty() 判空 map 底层实现：红黑树，查找时间复杂度为$O(logn)$ 按key进行排序，默认std::less从小到大 key</description></item><item><title>stack栈</title><link>/post/stack-stack-zfgeku.html</link><pubDate>Thu, 18 Jul 2024 16:23:17 +0800</pubDate><guid>/post/stack-stack-zfgeku.html</guid><description>stack栈 栈 特点： 先入后出 #include &amp;lt;stack&amp;gt; stack&amp;lt;int&amp;gt; st; 底层实现 支持empty()、back()、push_back()、pop_back()的容器 底层容器：v</description></item><item><title>树</title><link>/post/tree-zytrkb.html</link><pubDate>Thu, 18 Jul 2024 16:17:27 +0800</pubDate><guid>/post/tree-zytrkb.html</guid><description>树 树 结点总数 = Σ（度数*该度数对应的结点数）+1 = 度不为0的节点数 + 叶子节点数 二叉树 哈夫曼树（最优二叉树） 原理：贪心算法。每次选k个权重最小</description></item><item><title>链表</title><link>/post/linked-z1xhzbs.html</link><pubDate>Thu, 18 Jul 2024 16:17:21 +0800</pubDate><guid>/post/linked-z1xhzbs.html</guid><description>链表 单向链表 #include &amp;lt;forward_list&amp;gt; push_front() // 无push_back() emplace_front() front() // 无back() int size = std::distance(std::begin(v), std::end(v)); 成员函数 不支持size() 函数 功能 before_begin() 返回指向第一个元素之前位置的迭</description></item><item><title>数字</title><link>/post/number-z2upfwa.html</link><pubDate>Sun, 14 Jul 2024 12:05:30 +0800</pubDate><guid>/post/number-z2upfwa.html</guid><description>数字 大小范围（数值极限） 数据类型 大小 头文件 INT_MAX INT_MIN 2147483647(10位) -2147483648 limits.h FLT_MAX FLT_MIN limits.h DBL_MAX DBL_MIN float.h LONG_MAX LONG_MIN LLONG_MAX LLONG_MIN float能表示的最大正整数为2^32 d</description></item><item><title>模板</title><link>/post/template-zgwqlc.html</link><pubDate>Fri, 12 Jul 2024 16:41:44 +0800</pubDate><guid>/post/template-zgwqlc.html</guid><description>模板 特点： 作用：减少重复代码的编写 非类型参数模板 特点： 仅能使用int、char、short等整数，不能使用浮点数或字符串 作用：将常量值作为模</description></item><item><title>string字符串</title><link>/post/string-string-1g9olm.html</link><pubDate>Wed, 10 Jul 2024 23:42:16 +0800</pubDate><guid>/post/string-string-1g9olm.html</guid><description>string字符串 翻转字符串 reverse(s.begin(), s.end()); reverse(s.begin()+i , s.begin()+i+k); // 翻转以i为起始的k个字符串 void reverse(char *str, int n){ std::reverse(str, str+n); } 分割split void SplitString(const std::string&amp;amp; s, std::vector&amp;lt;std::string&amp;gt;&amp;amp; v, const std::string&amp;amp; c) { std::string::size_type pos1, pos2; pos2 = s.find(c); pos1 = 0; while(std::string::npos != pos2)</description></item><item><title>类</title><link>/post/kind-z2cvctu.html</link><pubDate>Wed, 10 Jul 2024 20:24:49 +0800</pubDate><guid>/post/kind-z2cvctu.html</guid><description>类 struct class struct 默认访问权限 private public 默认继承 private public 定义模板参数 （代替typename） √ × C++对struct进行了拓展，和C中的struct不同 封装 与C</description></item><item><title>关于 Hugo NexT 组织</title><link>/about.html</link><pubDate>Thu, 09 Jun 2022 20:12:52 +0800</pubDate><guid>/about.html</guid><description>Hugo NexT 组织是由众多喜爱 NexT 主题及风格的世界各地友人共同组建而成，为的就是让这个主题继续在 Hugo 引擎中也能得到发扬光大，在此也欢迎你的加入！ 我们的愿景</description></item><item><title>站点示例</title><link>/flinks.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/flinks.html</guid><description>如想交换本站友情链接，请在评论区留下你的站点信息，格式参考如下： - name: Hugo-NexT desc: Hugo NexT 官方预览网站。 avatar: https://hugo-next.eu.org/imgs/hugo_next_avatar.png link: https://hugo-next.eu.org</description></item></channel></rss>